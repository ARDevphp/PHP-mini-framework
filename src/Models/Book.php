<?php

declare(strict_types=1);

namespace src\Models;

use vendor\myFramework\Model;
use PDO;
use vendor\myFramework\SaveToDatabaseInterface;

class Book extends Model implements SaveToDatabaseInterface
{
    public array $data = [
        'id' => null,
        'category' => null,
        'author' => null,
        'image_id' => null,
        'text' => null,
        'name' => null
    ];
    public function TableName(): string
    {
        return 'book'; // TODO: Change the autogenerated stub
    }
    public function save(): void
    {
        $sql = "INSERT INTO onlinemarket.{$this->TableName()} 
                (name, text, image_id, bookCategoryId, authorId, visitedCount, createdAt) VALUE 
                (:name, :text, :image_id, :bookCategoryId, :authorId, :visitedCount, :createdAt)";

        $state = $this->db->prepare($sql);
        $state->bindValue(':name', $this->data['name']);
        $state->bindValue(':text', $this->data['text']);
        $state->bindValue(':image_id', $this->data['image_id']);
        $state->bindValue(':bookCategoryId', $this->data['category']);
        $state->bindValue(':authorId', $this->data['author']);
        $state->bindValue(':visitedCount', rand(1,100));
        $state->bindValue(':createdAt', date('d-m-y H:i:s'));

        $state->execute();
    }

    public function update(): void
    {
        $sql = "UPDATE onlinemarket.{$this->TableName()} SET 
                name = :name, text = :text, image_id = :image_id, bookCategoryId = :bookCategoryId, authorId = :authorId
                WHERE id = :id";

        $state = $this->db->prepare($sql);
        $state->bindValue(':id', $this->data['id'], PDO::PARAM_INT);
        $state->bindValue(':name', $this->data['name']);
        $state->bindValue(':text', $this->data['text']);
        $state->bindValue(':image_id', $this->data['image_id']);
        $state->bindValue(':bookCategoryId', $this->data['category']);
        $state->bindValue(':authorId', $this->data['author']);

        $state->execute();
    }
}
